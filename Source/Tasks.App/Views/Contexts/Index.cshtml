@using Tasks.App.Models
@model ContextIndexModel

@{
    ViewBag.Title = "Tasks";
}

<h2>Tasks</h2>

<div>

    <ul class="sortable">

    @foreach(var task in Model.Tasks)
    {
        <li id="@task.TaskId">
            <div class="container">
                @Html.ActionLink("X", "CompleteTask", "Tasks", new { id = task.TaskId }, null) - 
                @task.Title
        
                @foreach(var context in Model.OtherContexts)
                {
                    <span>[@Html.ActionLink("> "+context.Name, "MoveTaskToContext", "Tasks", new { targetContextId = context.ContextId, taskId = task.TaskId, fromContextId = task.ContextId }, null)]</span>
                }
            </div>
        </li>
    }
    </ul>

</div>

<script type="text/javascript">

    $(function () {
        var selected = $('.sortable li').first();
        selected.addClass('selected');
        
//        var originalOrder;
//        $(".sortable").sortable({
//            handle: '.handle',
//            start: function () {
//                originalOrder = $(".sortable").sortable('toArray');
//            },
//            update: function (event, ui) {
//                $.ajax({
//                    url: '@Url.Action("OrderTasks")',
//                    data: JSON.stringify({
//                        TaskId: ui.item[0].id,
//                        OriginalOrder: originalOrder,
//                        NewOrder: $(".sortable").sortable('toArray')
//                    }),
//                    type: 'POST',
//                    contentType: 'application/json, charset=utf-8',
//                    dataType: 'json'
//                });
//            }
//        });
    });

</script>


@Html.ActionLink("Create task", "Create", "Tasks")

